{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst ADD_RESERVATION = \"reservation/ADD\";\nconst STORE_RESERVATION = \"reservation/STORE\";\nconst GET_RESERVATION = \"reservation/GET\";\nconst DELETE_RESERVATION = \"reservation/DELETE\";\nconst EDIT_RESERVATION = \"reservation/EDIT\"; /////////////////// ACTION CREATORS ////////////////////\n\nconst addReservation = reservation => ({\n  type: ADD_RESERVATION,\n  reservation\n});\n\nconst newReservation = reservation => ({\n  type: STORE_RESERVATION,\n  reservation\n});\n\nconst getReservation = reservation => ({\n  type: GET_RESERVATION,\n  reservation\n});\n\nconst deleteReservation = reservationId => ({\n  type: DELETE_RESERVATION,\n  reservationId\n});\n\nconst editReservation = reservationId => ({\n  type: EDIT_RESERVATION,\n  reservationId\n}); //////////////// THUNK ACTION CREATORS ////////////////////\n\n\nexport const createReservation = reservation => async dispatch => {\n  const response = await csrfFetch(`/api/reservation`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(reservation)\n  });\n\n  if (response.ok) {\n    const reservation = await response.json();\n    dispatch(addReservation(reservation));\n    return reservation;\n  }\n};\nexport const storeNewReservation = reservation => async dispatch => {\n  dispatch(newReservation(reservation));\n  return reservation;\n};\nexport const getReservations = userId => async dispatch => {\n  const response = await csrfFetch(`/api/reservation`);\n\n  if (response.ok) {\n    const reservation = await response.json();\n    dispatch(getReservation(reservation));\n    return reservation;\n  }\n\n  ;\n};\nexport const cancelReservation = reservationId => async dispatch => {\n  const response = await csrfFetch(`/api/reservation/${reservationId}`, {\n    method: \"DELETE\"\n  });\n\n  if (response.ok) {\n    const reservationId = await response.json();\n    dispatch(deleteReservation(reservationId));\n  }\n\n  ;\n};\nexport const editReservations = reservationId => async dispatch => {\n  const response = await csrfFetch(`/api/reservation/${reservationId}`, {\n    method: \"PUT\"\n  });\n\n  if (response.ok) {\n    const reservationId = await response.json();\n    dispatch(editReservation(reservationId));\n  }\n\n  ;\n}; /////////////////////// REDUCER //////////////////////////\n\nconst initialState = {};\n\nconst reservationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_RESERVATION:\n      return action.reservation;\n\n    case STORE_RESERVATION:\n      return action.reservation;\n\n    case GET_RESERVATION:\n      const allreservations = {};\n      action.reservation.forEach(res => {\n        allreservations[res.id] = res;\n      });\n      return { ...allreservations\n      };\n\n    case DELETE_RESERVATION:\n      const newState = { ...state\n      };\n      delete newState[action.reservationId];\n      return newState;\n\n    case EDIT_RESERVATION:\n      const newState2 = { ...state,\n        [action.changedReview.id]: { ...state[action.changedReview.id],\n          review: action.changedReview.review,\n          cleanliness: action.changedReview.cleanliness\n        }\n      };\n      return newState2;\n\n    default:\n      return state;\n  }\n};\n\nexport default reservationReducer;","map":{"version":3,"sources":["/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/store/reservations.js"],"names":["csrfFetch","ADD_RESERVATION","STORE_RESERVATION","GET_RESERVATION","DELETE_RESERVATION","EDIT_RESERVATION","addReservation","reservation","type","newReservation","getReservation","deleteReservation","reservationId","editReservation","createReservation","dispatch","response","method","headers","body","JSON","stringify","ok","json","storeNewReservation","getReservations","userId","cancelReservation","editReservations","initialState","reservationReducer","state","action","allreservations","forEach","res","id","newState","newState2","changedReview","review","cleanliness"],"mappings":"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","sourcesContent":["import { csrfFetch } from './csrf';\n\nconst ADD_RESERVATION = \"reservation/ADD\";\nconst STORE_RESERVATION  = \"reservation/STORE\";\nconst GET_RESERVATION  = \"reservation/GET\";\nconst DELETE_RESERVATION  = \"reservation/DELETE\";\nconst EDIT_RESERVATION = \"reservation/EDIT\"\n/////////////////// ACTION CREATORS ////////////////////\n\nconst addReservation  = reservation => ({\n    type: ADD_RESERVATION ,\n    reservation\n});\n\nconst newReservation = reservation => ({\n    type: STORE_RESERVATION ,\n    reservation\n});\n\nconst getReservation  = (reservation) => ({\n    type: GET_RESERVATION ,\n    reservation\n});\n\nconst deleteReservation  = (reservationId) => ({\n    type: DELETE_RESERVATION,\n    reservationId\n});\n\nconst editReservation  = (reservationId) => ({\n    type: EDIT_RESERVATION,\n    reservationId\n});\n\n\n//////////////// THUNK ACTION CREATORS ////////////////////\n\nexport const createReservation  = reservation => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservation`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(reservation)\n    });\n\n    if (response.ok) {\n        const reservation = await response.json();\n        dispatch(addReservation (reservation));\n        return reservation;\n    }\n}\n\nexport const storeNewReservation  = reservation => async (dispatch) => {\n    dispatch(newReservation (reservation))\n    return reservation;\n}\n\nexport const getReservations = (userId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservation`);\n\n    if (response.ok) {\n        const reservation = await response.json();\n        dispatch(getReservation (reservation));\n        return reservation;\n    };\n}\n\nexport const cancelReservation  = (reservationId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservation/${reservationId}`, {\n        method: \"DELETE\"\n    });\n\n    if (response.ok) {\n        const reservationId = await response.json();\n        dispatch(deleteReservation (reservationId));\n    };\n}\n\nexport const editReservations  = (reservationId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservation/${reservationId}`, {\n        method: \"PUT\"\n    });\n\n    if (response.ok) {\n        const reservationId = await response.json();\n        dispatch(editReservation(reservationId));\n    };\n}\n\n/////////////////////// REDUCER //////////////////////////\n\nconst initialState = {};\n\nconst reservationReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_RESERVATION :\n            return action.reservation;\n        case STORE_RESERVATION :\n            return action.reservation;\n        case GET_RESERVATION :\n            const allreservations = {};\n            action.reservation.forEach(res => {\n                allreservations[res.id] = res;\n            });\n            return {...allreservations}\n        case DELETE_RESERVATION :\n            const newState={...state}\n            delete newState[action.reservationId]\n            return newState;\n        case EDIT_RESERVATION :\n            const newState2 = { ...state,\n            [action.changedReview.id]: {\n            ...state[action.changedReview.id],\n            review: action.changedReview.review,\n            cleanliness: action.changedReview.cleanliness,\n            }\n            }\n            return newState2\n\n        default:\n            return state;\n    }\n};\n\nexport default reservationReducer;\n"]},"metadata":{},"sourceType":"module"}