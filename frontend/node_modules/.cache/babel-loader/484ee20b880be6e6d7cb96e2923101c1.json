{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/DragZoom\n */\n\n\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\n\nvar DragZoom =\n/** @class */\nfunction (_super) {\n  __extends(DragZoom, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n\n\n  function DragZoom(opt_options) {\n    var _this = this;\n\n    var options = opt_options ? opt_options : {};\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n    _this = _super.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea\n    }) || this;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    _this.duration_ = options.duration !== undefined ? options.duration : 200;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    _this.out_ = options.out !== undefined ? options.out : false;\n    return _this;\n  }\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n\n\n  DragZoom.prototype.onBoxEnd = function (event) {\n    var map = this.getMap();\n    var view =\n    /** @type {!import(\"../View.js\").default} */\n    map.getView();\n    var size =\n    /** @type {!import(\"../size.js\").Size} */\n    map.getSize();\n    var extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      var mapExtent = view.calculateExtentInternal(size);\n      var boxPixelExtent = createOrUpdateFromCoordinates([map.getPixelFromCoordinateInternal(getBottomLeft(extent)), map.getPixelFromCoordinateInternal(getTopRight(extent))]);\n      var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n\n  return DragZoom;\n}(DragBox);\n\nexport default DragZoom;","map":{"version":3,"sources":["../src/interaction/DragZoom.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEG;;;AACH,OAAO,OAAP,MAAoB,cAApB;AACA,SACE,6BADF,EAEE,aAFF,EAGE,SAHF,EAIE,WAJF,EAKE,eALF,QAMO,cANP;AAOA,SAAQ,OAAR,QAAsB,cAAtB;AACA,SAAQ,YAAR,QAA2B,wBAA3B;AAEA;;;;;;;;;;;;AAYG;;AAEH;;;;;;;;;AASG;;AACH,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuB,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;AACrB;;AAEG;;;AACH,WAAA,QAAA,CAAY,WAAZ,EAAuB;AAAvB,QAAA,KAAA,GAAA,IAAA;;AACE,QAAM,OAAO,GAAG,WAAW,GAAG,WAAH,GAAiB,EAA5C;AAEA,QAAM,SAAS,GAAG,OAAO,CAAC,SAAR,GAAoB,OAAO,CAAC,SAA5B,GAAwC,YAA1D;AAEA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM;AACJ,MAAA,SAAS,EAAE,SADP;AAEJ,MAAA,SAAS,EAAE,OAAO,CAAC,SAAR,IAAqB,aAF5B;AAGJ,MAAA,OAAO,EAAE,OAAO,CAAC;AAHb,KAAN,KAIE,IAJF;AAMA;;;AAGG;;AACH,IAAA,KAAI,CAAC,SAAL,GAAiB,OAAO,CAAC,QAAR,KAAqB,SAArB,GAAiC,OAAO,CAAC,QAAzC,GAAoD,GAArE;AAEA;;;AAGG;;AACH,IAAA,KAAI,CAAC,IAAL,GAAY,OAAO,CAAC,GAAR,KAAgB,SAAhB,GAA4B,OAAO,CAAC,GAApC,GAA0C,KAAtD;;AACD;AAED;;;AAGG;;;AACH,EAAA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,KAAT,EAAc;AACZ,QAAM,GAAG,GAAG,KAAK,MAAL,EAAZ;AACA,QAAM,IAAI;AAAG;AAA8C,IAAA,GAAG,CAAC,OAAJ,EAA3D;AACA,QAAM,IAAI;AAAG;AAA2C,IAAA,GAAG,CAAC,OAAJ,EAAxD;AACA,QAAI,MAAM,GAAG,KAAK,WAAL,GAAmB,SAAnB,EAAb;;AAEA,QAAI,KAAK,IAAT,EAAe;AACb,UAAM,SAAS,GAAG,IAAI,CAAC,uBAAL,CAA6B,IAA7B,CAAlB;AACA,UAAM,cAAc,GAAG,6BAA6B,CAAC,CACnD,GAAG,CAAC,8BAAJ,CAAmC,aAAa,CAAC,MAAD,CAAhD,CADmD,EAEnD,GAAG,CAAC,8BAAJ,CAAmC,WAAW,CAAC,MAAD,CAA9C,CAFmD,CAAD,CAApD;AAIA,UAAM,MAAM,GAAG,IAAI,CAAC,8BAAL,CAAoC,cAApC,EAAoD,IAApD,CAAf;AAEA,MAAA,eAAe,CAAC,SAAD,EAAY,IAAI,MAAhB,CAAf;AACA,MAAA,MAAM,GAAG,SAAT;AACD;;AAED,QAAM,UAAU,GAAG,IAAI,CAAC,wBAAL,CACjB,IAAI,CAAC,8BAAL,CAAoC,MAApC,EAA4C,IAA5C,CADiB,CAAnB;AAGA,QAAM,MAAM,GAAG,IAAI,CAAC,oBAAL,CAA0B,SAAS,CAAC,MAAD,CAAnC,EAA6C,UAA7C,CAAf;AAEA,IAAA,IAAI,CAAC,eAAL,CAAqB;AACnB,MAAA,UAAU,EAAE,UADO;AAEnB,MAAA,MAAM,EAAE,MAFW;AAGnB,MAAA,QAAQ,EAAE,KAAK,SAHI;AAInB,MAAA,MAAM,EAAE;AAJW,KAArB;AAMD,GA7BD;;AA8BF,SAAA,QAAA;AAAC,CA9DD,CAAuB,OAAvB,CAAA;;AAgEA,eAAe,QAAf","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map"]},"metadata":{},"sourceType":"module"}