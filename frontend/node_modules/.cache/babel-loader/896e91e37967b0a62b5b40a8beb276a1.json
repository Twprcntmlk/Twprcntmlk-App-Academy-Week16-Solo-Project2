{"ast":null,"code":"// frontend/src/store/session.js\nimport { csrfFetch } from './csrf';\nconst SET_USER = \"session/setUser\";\nconst REMOVE_USER = \"session/removeUser\";\nconst GET_USER = \"session/getUser\";\nexport const getUser = user => ({\n  type: GET_USER,\n  payload: user\n});\nexport const setUser = user => ({\n  type: SET_USER,\n  payload: user\n});\nexport const removeUser = () => ({\n  type: REMOVE_USER\n});\nexport const login = user => async dispatch => {\n  const {\n    credential,\n    password\n  } = user;\n  const response = await csrfFetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      credential,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\nexport const restoreUser = () => async dispatch => {\n  const response = await csrfFetch('/api/session');\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\nexport const signup = user => async dispatch => {\n  const {\n    username,\n    email,\n    password\n  } = user;\n  const response = await csrfFetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\nexport const updateUser = user => async dispatch => {\n  const res = await csrfFetch(`/api/users/${user.id}`, {\n    method: \"PATCH\",\n    body: JSON.stringify(user)\n  });\n  if (!res.ok) throw res;\n  const data = await res.json();\n  dispatch(setUser(data.user));\n  return res;\n};\nexport const logout = () => async dispatch => {\n  const response = await csrfFetch('/api/session', {\n    method: 'DELETE'\n  });\n  dispatch(removeUser());\n  return response;\n};\nconst initialState = {\n  user: null\n};\n\nconst sessionReducer = (state = initialState, action) => {\n  let newState;\n\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.payload;\n      return newState;\n\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default sessionReducer;","map":{"version":3,"sources":["/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/store/session.js"],"names":["csrfFetch","SET_USER","REMOVE_USER","GET_USER","getUser","user","type","payload","setUser","removeUser","login","dispatch","credential","password","response","method","body","JSON","stringify","data","json","restoreUser","signup","username","email","updateUser","res","id","ok","logout","initialState","sessionReducer","state","action","newState","Object","assign"],"mappings":"AAAA;AACA,SAASA,SAAT,QAA0B,QAA1B;AAEA,MAAMC,QAAQ,GAAG,iBAAjB;AACA,MAAMC,WAAW,GAAG,oBAApB;AACA,MAAMC,QAAQ,GAAG,iBAAjB;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEH,QAD0B;AAEhCI,EAAAA,OAAO,EAAEF;AAFuB,CAAX,CAAhB;AAMP,OAAO,MAAMG,OAAO,GAAIH,IAAD,KAAW;AAC9BC,EAAAA,IAAI,EAAEL,QADwB;AAE9BM,EAAAA,OAAO,EAAEF;AAFqB,CAAX,CAAhB;AAKP,OAAO,MAAMI,UAAU,GAAG,OAAO;AAC7BH,EAAAA,IAAI,EAAEJ;AADuB,CAAP,CAAnB;AAKP,OAAO,MAAMQ,KAAK,GAAIL,IAAD,IAAU,MAAOM,QAAP,IAAoB;AACjD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA2BR,IAAjC;AACA,QAAMS,QAAQ,GAAG,MAAMd,SAAS,CAAC,cAAD,EAAiB;AAC/Ce,IAAAA,MAAM,EAAE,MADuC;AAE/CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,MAAAA,UADmB;AAEnBC,MAAAA;AAFmB,KAAf;AAFyC,GAAjB,CAAhC;AAOA,QAAMM,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AAEAT,EAAAA,QAAQ,CAACH,OAAO,CAACW,IAAI,CAACd,IAAN,CAAR,CAAR;AACA,SAAOS,QAAP;AACD,CAbM;AAeP,OAAO,MAAMO,WAAW,GAAG,MAAM,MAAMV,QAAN,IAAkB;AACjD,QAAMG,QAAQ,GAAG,MAAMd,SAAS,CAAC,cAAD,CAAhC;AACA,QAAMmB,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAT,EAAAA,QAAQ,CAACH,OAAO,CAACW,IAAI,CAACd,IAAN,CAAR,CAAR;AACA,SAAOS,QAAP;AACD,CALM;AAQP,OAAO,MAAMQ,MAAM,GAAIjB,IAAD,IAAU,MAAOM,QAAP,IAAoB;AAClD,QAAM;AAAEY,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBX,IAAAA;AAAnB,MAAgCR,IAAtC;AACA,QAAMS,QAAQ,GAAG,MAAMd,SAAS,CAAC,YAAD,EAAe;AAC7Ce,IAAAA,MAAM,EAAE,MADqC;AAE7CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBK,MAAAA,QADmB;AAEnBC,MAAAA,KAFmB;AAGnBX,MAAAA;AAHmB,KAAf;AAFuC,GAAf,CAAhC;AAQA,QAAMM,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAT,EAAAA,QAAQ,CAACH,OAAO,CAACW,IAAI,CAACd,IAAN,CAAR,CAAR;AACA,SAAOS,QAAP;AACD,CAbM;AAgBP,OAAO,MAAMW,UAAU,GAAIpB,IAAD,IAAU,MAAOM,QAAP,IAAoB;AACtD,QAAMe,GAAG,GAAG,MAAM1B,SAAS,CAAE,cAAaK,IAAI,CAACsB,EAAG,EAAvB,EAA0B;AACnDZ,IAAAA,MAAM,EAAE,OAD2C;AAEnDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;AAF6C,GAA1B,CAA3B;AAIA,MAAG,CAACqB,GAAG,CAACE,EAAR,EAAY,MAAMF,GAAN;AAEZ,QAAMP,IAAI,GAAG,MAAMO,GAAG,CAACN,IAAJ,EAAnB;AACAT,EAAAA,QAAQ,CAACH,OAAO,CAACW,IAAI,CAACd,IAAN,CAAR,CAAR;AACA,SAAOqB,GAAP;AACD,CAVM;AAaP,OAAO,MAAMG,MAAM,GAAG,MAAM,MAAOlB,QAAP,IAAoB;AAC9C,QAAMG,QAAQ,GAAG,MAAMd,SAAS,CAAC,cAAD,EAAiB;AAC/Ce,IAAAA,MAAM,EAAE;AADuC,GAAjB,CAAhC;AAGAJ,EAAAA,QAAQ,CAACF,UAAU,EAAX,CAAR;AACA,SAAOK,QAAP;AACD,CANM;AASP,MAAMgB,YAAY,GAAG;AAAEzB,EAAAA,IAAI,EAAE;AAAR,CAArB;;AAEA,MAAM0B,cAAc,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACvD,MAAIC,QAAJ;;AACA,UAAQD,MAAM,CAAC3B,IAAf;AACE,SAAKL,QAAL;AACEiC,MAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAX;AACAE,MAAAA,QAAQ,CAAC7B,IAAT,GAAgB4B,MAAM,CAAC1B,OAAvB;AACA,aAAO2B,QAAP;;AACF,SAAKhC,WAAL;AACEgC,MAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,CAAX;AACAE,MAAAA,QAAQ,CAAC7B,IAAT,GAAgB,IAAhB;AACA,aAAO6B,QAAP;;AACF;AACE,aAAOF,KAAP;AAVJ;AAYD,CAdD;;AAgBA,eAAeD,cAAf","sourcesContent":["// frontend/src/store/session.js\nimport { csrfFetch } from './csrf';\n\nconst SET_USER = \"session/setUser\"\nconst REMOVE_USER = \"session/removeUser\"\nconst GET_USER = \"session/getUser\"\n\nexport const getUser = (user) => ({\n  type: GET_USER,\n  payload: user\n})\n\n\nexport const setUser = (user) => ({\n    type: SET_USER,\n    payload: user\n})\n\nexport const removeUser = () => ({\n    type: REMOVE_USER,\n})\n\n\nexport const login = (user) => async (dispatch) => {\n  const { credential, password } = user;\n  const response = await csrfFetch('/api/session', {\n    method: 'POST',\n    body: JSON.stringify({\n      credential,\n      password,\n    }),\n  });\n  const data = await response.json();\n\n  dispatch(setUser(data.user));\n  return response;\n};\n\nexport const restoreUser = () => async dispatch => {\n  const response = await csrfFetch('/api/session');\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\n\n\nexport const signup = (user) => async (dispatch) => {\n  const { username, email, password } = user;\n  const response = await csrfFetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\n\n\nexport const updateUser = (user) => async (dispatch) => {\n  const res = await csrfFetch(`/api/users/${user.id}`, {\n    method: \"PATCH\",\n    body: JSON.stringify(user),\n  });\n  if(!res.ok) throw res;\n\n  const data = await res.json();\n  dispatch(setUser(data.user));\n  return res;\n};\n\n\nexport const logout = () => async (dispatch) => {\n  const response = await csrfFetch('/api/session', {\n    method: 'DELETE',\n  });\n  dispatch(removeUser());\n  return response;\n};\n\n\nconst initialState = { user: null }\n\nconst sessionReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.payload;\n      return newState;\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default sessionReducer\n"]},"metadata":{},"sourceType":"module"}