{"ast":null,"code":"var _jsxFileName = \"/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/components/Message/message.js\",\n    _s = $RefreshSig$();\n\n// frontend/src/components/Navigation/ProfileButton.js\nimport React, { useState, useEffect } from \"react\"; //\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getmessages, addmessages } from '../../store/message';\nimport './message.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Messages({\n  hostId\n}) {\n  _s();\n\n  //will probably need to pass id userId,\n  const dispatch = useDispatch();\n  const [message, setMessage] = useState(null);\n\n  const updateMessage = e => setMessage(e.target.value);\n\n  const {\n    user\n  } = useSelector(state => state.session);\n  const MessageState = useSelector(state => state.messages);\n  const messages = Object.values(MessageState);\n  console.log(\"where\", user.id);\n  const usermessages = messages.filter(el => el.userId === user.id);\n  const hostmessages = messages.filter(el => el.userId === 2);\n  console.log(hostmessages);\n  useEffect(() => {\n    dispatch(getmessages());\n  }, [dispatch]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      userId: user.id,\n      hostId: hostId,\n      message\n    };\n    const addedReview = await dispatch(addmessages(payload));\n\n    if (addedReview) {\n      setMessage('');\n    }\n  };\n\n  const handleCancelClick = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"THIS IS MESSAGES THAT is HALF WORKING 1--NEED TO MOVE THIS TO USER 2-- Need to add the host Id to user not the listing's userid/hostId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"UserChat\",\n        children: usermessages === null || usermessages === void 0 ? void 0 : usermessages.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `message-${i}`,\n          children: [\"user\", el.message]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 47\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"HostChat\",\n        children: hostmessages === null || hostmessages === void 0 ? void 0 : hostmessages.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `message-${i}`,\n          children: [\"host\", el.message]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 47\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"Chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: message,\n          placeholder: \"Please Enter Your Message Here...\",\n          onChange: updateMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCancelClick,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Messages, \"ZDadYgXnBKyvndwiIhNYsInojSk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/components/Message/message.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getmessages","addmessages","Messages","hostId","dispatch","message","setMessage","updateMessage","e","target","value","user","state","session","MessageState","messages","Object","values","console","log","id","usermessages","filter","el","userId","hostmessages","handleSubmit","preventDefault","payload","addedReview","handleCancelClick","map","i"],"mappings":"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","sourcesContent":["// frontend/src/components/Navigation/ProfileButton.js\nimport React,{ useState, useEffect} from \"react\"; //\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getmessages,addmessages } from '../../store/message';\nimport './message.css';\n\nfunction Messages ({hostId}) { //will probably need to pass id userId,\n  const dispatch = useDispatch();\n\n  const [message, setMessage] = useState(null);\n  const updateMessage = (e) => setMessage(e.target.value);\n  const {user} = useSelector(state => state.session);\n  const MessageState= useSelector(state => state.messages);\n  const messages = Object.values(MessageState);\nconsole.log(\"where\",user.id)\n    const usermessages= messages.filter((el) => (el.userId === user.id))\n    const hostmessages= messages.filter((el) => (el.userId === 2))\n    console.log(hostmessages)\nuseEffect(() => {\n    dispatch(getmessages());\n    }, [dispatch])\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const payload = {\n      userId:user.id,\n      hostId:hostId,\n      message\n    };\n\n    const addedReview = await dispatch(addmessages(payload));\n    if (addedReview) {\n      setMessage('');\n\n    }\n  };\n\n  const handleCancelClick = (e) => {\n    e.preventDefault();\n\n  };\n\n  return (\n    <section >\n        <div className=\"messages\">\n            <div>\n            THIS IS MESSAGES THAT is HALF WORKING\n            1--NEED TO MOVE THIS TO USER\n            2-- Need to add the host Id to user not the listing's userid/hostId\n            </div>\n            <div className=\"UserChat\">\n                {usermessages?.map((el, i) => <div  id={`message-${i}`} key={i} >user{el.message}</div>)}\n            </div>\n\n            <div className=\"HostChat\">\n                {hostmessages?.map((el, i) => <div  id={`message-${i}`} key={i} >host{el.message}</div>)}\n            </div>\n\n            <form onSubmit={handleSubmit} className=\"Chat\">\n            <textarea value={message} placeholder=\"Please Enter Your Message Here...\" onChange={updateMessage}></textarea>\n                    <button type=\"submit\">Enter</button>\n            <button type=\"button\" onClick={handleCancelClick}>Cancel</button>\n            </form>\n        </div>\n    </section>\n  );\n}\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}