{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst ADD_BOOKING = \"res/ADD\";\nconst STORE_BOOKING = \"res/STORE\";\nconst GET_BOOKING = \"res/GET\";\nconst DELETE_BOOKING = \"res/DELETE\"; /////////////////// ACTION CREATORS ////////////////////\n\nconst addBooking = res => ({\n  type: ADD_BOOKING,\n  res\n});\n\nconst newBooking = res => ({\n  type: STORE_BOOKING,\n  res\n});\n\nconst getBooking = res => ({\n  type: GET_BOOKING,\n  res\n});\n\nconst deleteBooking = bookingId => ({\n  type: DELETE_BOOKING,\n  bookingId\n}); //////////////// THUNK ACTION CREATORS ////////////////////\n\n\nexport const createBooking = res => async dispatch => {\n  const response = await csrfFetch(`/api/bookings`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(res)\n  });\n\n  if (response.ok) {\n    const res = await response.json();\n    dispatch(addBooking(res));\n    return res;\n  }\n};\nexport const storeNewBooking = res => async dispatch => {\n  dispatch(newBooking(res));\n  return res;\n};\nexport const getBookings = userId => async dispatch => {\n  const response = await csrfFetch(`/api/users/${userId}/bookings`);\n\n  if (response.ok) {\n    const res = await response.json();\n    dispatch(getBooking(res));\n    return res;\n  }\n\n  ;\n};\nexport const cancelBooking = bookingId => async dispatch => {\n  const response = await csrfFetch(`/api/bookings/${bookingId}`, {\n    method: \"DELETE\"\n  });\n\n  if (response.ok) {\n    const bookingId = await response.json();\n    dispatch(deleteBooking(bookingId));\n  }\n\n  ;\n}; /////////////////////// REDUCER //////////////////////////\n\nconst initialState = {};\n\nconst bookingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_BOOKING:\n      return action.res;\n\n    case STORE_BOOKING:\n      return action.res;\n\n    case GET_BOOKING:\n      return action.res;\n\n    case DELETE_BOOKING:\n      const newState = { ...state\n      };\n      delete newState[action.bookingId];\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default bookingReducer;","map":{"version":3,"sources":["/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/store/reservations.js"],"names":["csrfFetch","ADD_BOOKING","STORE_BOOKING","GET_BOOKING","DELETE_BOOKING","addBooking","res","type","newBooking","getBooking","deleteBooking","bookingId","createBooking","dispatch","response","method","headers","body","JSON","stringify","ok","json","storeNewBooking","getBookings","userId","cancelBooking","initialState","bookingReducer","state","action","newState"],"mappings":"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","sourcesContent":["import { csrfFetch } from './csrf';\n\nconst ADD_BOOKING = \"res/ADD\";\nconst STORE_BOOKING = \"res/STORE\";\nconst GET_BOOKING = \"res/GET\";\nconst DELETE_BOOKING = \"res/DELETE\";\n\n/////////////////// ACTION CREATORS ////////////////////\n\nconst addBooking = res => ({\n    type: ADD_BOOKING,\n    res\n});\n\nconst newBooking = res => ({\n    type: STORE_BOOKING,\n    res\n});\n\nconst getBooking = (res) => ({\n    type: GET_BOOKING,\n    res\n});\n\nconst deleteBooking = (bookingId) => ({\n    type: DELETE_BOOKING,\n    bookingId\n});\n\n//////////////// THUNK ACTION CREATORS ////////////////////\n\nexport const createBooking = res => async (dispatch) => {\n    const response = await csrfFetch(`/api/bookings`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(res)\n    });\n\n    if (response.ok) {\n        const res = await response.json();\n        dispatch(addBooking(res));\n        return res;\n    }\n}\n\nexport const storeNewBooking = res => async (dispatch) => {\n    dispatch(newBooking(res))\n    return res;\n}\n\nexport const getBookings = (userId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/users/${userId}/bookings`);\n\n    if (response.ok) {\n        const res = await response.json();\n        dispatch(getBooking(res));\n        return res;\n    };\n}\n\nexport const cancelBooking = (bookingId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/bookings/${bookingId}`, {\n        method: \"DELETE\"\n    });\n\n    if (response.ok) {\n        const bookingId = await response.json();\n        dispatch(deleteBooking(bookingId));\n    };\n}\n\n/////////////////////// REDUCER //////////////////////////\n\nconst initialState = {};\n\nconst bookingReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_BOOKING:\n            return action.res;\n        case STORE_BOOKING:\n            return action.res;\n        case GET_BOOKING:\n            return action.res;\n        case DELETE_BOOKING:\n            const newState = { ...state }\n            delete newState[action.bookingId]\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default bookingReducer;\n"]},"metadata":{},"sourceType":"module"}