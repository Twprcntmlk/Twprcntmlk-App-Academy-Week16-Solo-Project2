{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst FIND = 'reviews/FIND';\nconst ADD = 'reviews/ADD';\nconst EDIT = 'reviews/EDIT';\nconst DELETE = 'reviews/DELETE';\n\nconst reviewFind = (reviews, id) => ({\n  type: FIND,\n  reviews,\n  id\n});\n\nconst add = review => ({\n  type: ADD,\n  review\n});\n\nconst edit = changedReview => ({\n  type: EDIT,\n  changedReview\n});\n\nconst remove = id => ({\n  type: DELETE,\n  id\n});\n\nexport const getReviews = id => async dispatch => {\n  const res = await csrfFetch(`/api/reviews`); //${id}`\n\n  if (res.ok) {\n    const reviews = await res.json();\n    dispatch(reviewFind(reviews, id));\n  }\n};\nexport const addReview = newReview => async dispatch => {\n  const res = await csrfFetch('/api/reviews', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...newReview\n    })\n  });\n\n  if (res.ok) {\n    const review = await res.json();\n    return dispatch(add(review));\n  }\n};\nexport const editReview = updatedReview => async dispatch => {\n  const res = await csrfFetch('/api/reviews/edit', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...updatedReview\n    })\n  });\n\n  if (res.ok) {\n    const review = await res.json(); //\n\n    console.log(review); // const [change] = review[1];\n\n    return await dispatch(edit(review));\n  }\n};\nexport const deleteReview = id => async dispatch => {\n  const res = await csrfFetch(`/api/reviews/${id}`, {\n    method: 'DELETE'\n  });\n\n  if (res.ok) {\n    dispatch(remove(id));\n  }\n};\n\nconst reviewReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FIND:\n      {\n        const allReviews = {};\n        action.reviews.forEach(review => {\n          allReviews[review.id] = review;\n        });\n        return allReviews;\n      }\n\n    case ADD:\n      {\n        const newState = { ...state\n        };\n        newState[action.review.id] = action.review;\n        return newState;\n      }\n\n    case DELETE:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case EDIT:\n      console.log(state);\n      {\n        //changedReview{id:id,review:review....}\n        const newState = { ...state,\n          [action.changedReview.id]: { ...state[action.changedReview.id],\n            review: action.changedReview.review,\n            cleanliness: action.changedReview.cleanliness,\n            communication: action.changedReview.communication,\n            checkIn: action.changedReview.checkIn,\n            accuracy: action.changedReview.accuracy,\n            location: action.changedReview.location,\n            value: action.changedReview.value\n          }\n        };\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default reviewReducer;","map":{"version":3,"sources":["/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/store/reviews.js"],"names":["csrfFetch","FIND","ADD","EDIT","DELETE","reviewFind","reviews","id","type","add","review","edit","changedReview","remove","getReviews","dispatch","res","ok","json","addReview","newReview","method","headers","body","JSON","stringify","editReview","updatedReview","console","log","deleteReview","reviewReducer","state","action","allReviews","forEach","newState","cleanliness","communication","checkIn","accuracy","location","value"],"mappings":"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","sourcesContent":["import { csrfFetch } from './csrf';\n\n\nconst FIND = 'reviews/FIND';\nconst ADD = 'reviews/ADD';\nconst EDIT = 'reviews/EDIT';\nconst DELETE = 'reviews/DELETE';\n\n\nconst reviewFind = (reviews, id) => ({\n  type: FIND,\n  reviews,\n  id\n});\n\nconst add = review => ({\n  type: ADD,\n  review\n});\n\nconst edit = changedReview => ({\n  type: EDIT,\n  changedReview\n})\n\nconst remove = id => ({\n  type: DELETE,\n  id\n})\n\nexport const getReviews = (id) => async dispatch => {\n  const res = await csrfFetch(`/api/reviews`,);//${id}`\n\n  if (res.ok) {\n    const reviews = await res.json();\n\n    dispatch(reviewFind(reviews, id));\n  }\n};\n\n\nexport const addReview = (newReview) => async dispatch => {\n  const res = await csrfFetch('/api/reviews', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({...newReview})\n  });\n\n  if (res.ok) {\n    const review = await res.json();\n   return dispatch(add(review));\n  }\n};\n\n\nexport const editReview = (updatedReview) => async dispatch => {\n  const res = await csrfFetch('/api/reviews/edit', {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({...updatedReview})\n  });\n\n  if (res.ok) {\n\n    const review = await res.json(); //\n    console.log(review)\n    // const [change] = review[1];\n    return await dispatch(edit(review));\n  }\n}\n\nexport const deleteReview = ( id ) =>  async dispatch => {\n  const res = await csrfFetch(`/api/reviews/${id}`, {\n    method: 'DELETE'\n  });\n\n  if(res.ok) {\n    dispatch(remove(id))\n  }\n}\n\n\nconst reviewReducer = (state = {}, action) => {\n  switch(action.type) {\n    case FIND:\n      {\n        const allReviews = {};\n        action.reviews.forEach(review => {\n          allReviews[review.id] = review;\n        });\n        return allReviews;\n\n      }\n    case ADD:\n      {\n      const newState = {...state}\n      newState[action.review.id] = action.review\n      return newState;\n      }\n    case DELETE:\n      {\n        const newState = { ...state }\n        delete newState[action.id]\n        return newState\n      }\n    case EDIT:\n      console.log(state)\n      {//changedReview{id:id,review:review....}\n        const newState = { ...state,\n        [action.changedReview.id]: {\n          ...state[action.changedReview.id],\n          review: action.changedReview.review,\n          cleanliness: action.changedReview.cleanliness,\n          communication: action.changedReview.communication,\n          checkIn: action.changedReview.checkIn,\n          accuracy: action.changedReview.accuracy,\n          location: action.changedReview.location,\n          value: action.changedReview.value,\n        }\n        }\n        return newState\n      }\n    default:\n      return state;\n  };\n\n}\n\nexport default reviewReducer;\n"]},"metadata":{},"sourceType":"module"}