{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst ADD_RESERVATION = \"reservation/ADD\";\nconst STORE_RESERVATION = \"reservation/STORE\";\nconst GET_RESERVATION = \"reservation/GET\";\nconst DELETE_RESERVATION = \"reservation/DELETE\"; /////////////////// ACTION CREATORS ////////////////////\n\nconst addBooking = reservation => ({\n  type: ADD_RESERVATION,\n  reservation\n});\n\nconst newBooking = reservation => ({\n  type: STORE_RESERVATION,\n  reservation\n});\n\nconst getBooking = reservation => ({\n  type: GET_BOOKING,\n  reservation\n});\n\nconst deleteBooking = bookingId => ({\n  type: DELETE_BOOKING,\n  bookingId\n}); //////////////// THUNK ACTION CREATORS ////////////////////\n\n\nexport const createBooking = reservation => async dispatch => {\n  const response = await csrfFetch(`/api/reservation`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(reservation)\n  });\n\n  if (response.ok) {\n    const reservation = await response.json();\n    dispatch(addBooking(reservation));\n    return reservation;\n  }\n};\nexport const storeNewBooking = reservation => async dispatch => {\n  dispatch(newBooking(reservation));\n  return reservation;\n};\nexport const getBookings = userId => async dispatch => {\n  const response = await csrfFetch(`/api/users/${userId}/reservations`);\n\n  if (response.ok) {\n    const reservation = await response.json();\n    dispatch(getBooking(reservation));\n    return reservation;\n  }\n\n  ;\n};\nexport const cancelBooking = bookingId => async dispatch => {\n  const response = await csrfFetch(`/api/reservations/${bookingId}`, {\n    method: \"DELETE\"\n  });\n\n  if (response.ok) {\n    const bookingId = await response.json();\n    dispatch(deleteBooking(bookingId));\n  }\n\n  ;\n}; /////////////////////// REDUCER //////////////////////////\n\nconst initialState = {};\n\nconst bookingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_BOOKING:\n      return action.reservation;\n\n    case STORE_BOOKING:\n      return action.reservation;\n\n    case GET_BOOKING:\n      return action.reservation;\n\n    case DELETE_BOOKING:\n      const newState = { ...state\n      };\n      delete newState[action.bookingId];\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default bookingReducer;","map":{"version":3,"sources":["/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/store/reservations.js"],"names":["csrfFetch","ADD_RESERVATION","STORE_RESERVATION","GET_RESERVATION","DELETE_RESERVATION","addBooking","reservation","type","newBooking","getBooking","GET_BOOKING","deleteBooking","bookingId","DELETE_BOOKING","createBooking","dispatch","response","method","headers","body","JSON","stringify","ok","json","storeNewBooking","getBookings","userId","cancelBooking","initialState","bookingReducer","state","action","ADD_BOOKING","STORE_BOOKING","newState"],"mappings":"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","sourcesContent":["import { csrfFetch } from './csrf';\n\nconst ADD_RESERVATION = \"reservation/ADD\";\nconst STORE_RESERVATION  = \"reservation/STORE\";\nconst GET_RESERVATION  = \"reservation/GET\";\nconst DELETE_RESERVATION  = \"reservation/DELETE\";\n\n/////////////////// ACTION CREATORS ////////////////////\n\nconst addBooking = reservation => ({\n    type: ADD_RESERVATION ,\n    reservation\n});\n\nconst newBooking = reservation => ({\n    type: STORE_RESERVATION ,\n    reservation\n});\n\nconst getBooking = (reservation) => ({\n    type: GET_BOOKING,\n    reservation\n});\n\nconst deleteBooking = (bookingId) => ({\n    type: DELETE_BOOKING,\n    bookingId\n});\n\n//////////////// THUNK ACTION CREATORS ////////////////////\n\nexport const createBooking = reservation => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservation`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(reservation)\n    });\n\n    if (response.ok) {\n        const reservation = await response.json();\n        dispatch(addBooking(reservation));\n        return reservation;\n    }\n}\n\nexport const storeNewBooking = reservation => async (dispatch) => {\n    dispatch(newBooking(reservation))\n    return reservation;\n}\n\nexport const getBookings = (userId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/users/${userId}/reservations`);\n\n    if (response.ok) {\n        const reservation = await response.json();\n        dispatch(getBooking(reservation));\n        return reservation;\n    };\n}\n\nexport const cancelBooking = (bookingId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservations/${bookingId}`, {\n        method: \"DELETE\"\n    });\n\n    if (response.ok) {\n        const bookingId = await response.json();\n        dispatch(deleteBooking(bookingId));\n    };\n}\n\n/////////////////////// REDUCER //////////////////////////\n\nconst initialState = {};\n\nconst bookingReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_BOOKING:\n            return action.reservation;\n        case STORE_BOOKING:\n            return action.reservation;\n        case GET_BOOKING:\n            return action.reservation;\n        case DELETE_BOOKING:\n            const newState = { ...state }\n            delete newState[action.bookingId]\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default bookingReducer;\n"]},"metadata":{},"sourceType":"module"}