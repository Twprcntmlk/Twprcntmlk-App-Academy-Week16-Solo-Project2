{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst FIND = 'reviews/FIND';\nconst ADD = 'reviews/ADD';\nconst EDIT = 'reviews/EDIT';\nconst DELETE = 'reviews/DELETE';\n\nconst reviewFind = reviews => ({\n  type: FIND,\n  reviews\n});\n\nconst add = review => ({\n  type: ADD,\n  review\n});\n\nconst edit = change => ({\n  type: EDIT,\n  change\n});\n\nconst remove = id => ({\n  type: DELETE,\n  id\n});\n\nexport const getReviews = id => async dispatch => {\n  const res = await csrfFetch(`/api/reviews`); //${id}`\n\n  if (res.ok) {\n    const reviews = await res.json();\n    dispatch(reviewFind(reviews));\n  }\n};\nexport const addReview = newReview => async dispatch => {\n  const res = await csrfFetch('/api/reviews', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...newReview\n    })\n  });\n\n  if (res.ok) {\n    const review = await res.json();\n    return dispatch(add(review));\n  }\n};\nexport const editReview = update => async dispatch => {\n  const res = await csrfFetch('/api/reviews/edit', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...update\n    })\n  });\n\n  if (res.ok) {\n    const review = await res.json();\n    const [change] = review[1];\n    return await dispatch(edit(change));\n  }\n};\nexport const deleteReview = review => async dispatch => {\n  const res = await csrfFetch(`/api/reviews/${review.id}`, {\n    method: 'DELETE'\n  });\n\n  if (res.ok) {\n    dispatch(remove(review.id));\n  }\n};\n\nconst reviewReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FIND:\n      {\n        const allReviews = {};\n        console.log(action.reviews);\n        action.reviews.forEach(review => {\n          allReviews[review.id] = review;\n        });\n        console.log(allReviews);\n        return allReviews;\n      }\n\n    case ADD:\n      {\n        const newState = { ...state\n        };\n        newState[action.review.id] = action.review;\n        return newState;\n      }\n\n    case DELETE:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case EDIT:\n      {\n        const newState = { ...state,\n          [action.change.id]: { ...state[action.change.id],\n            body: action.change.body\n          }\n        };\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default reviewReducer;","map":{"version":3,"sources":["/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/store/reviews.js"],"names":["csrfFetch","FIND","ADD","EDIT","DELETE","reviewFind","reviews","type","add","review","edit","change","remove","id","getReviews","dispatch","res","ok","json","addReview","newReview","method","headers","body","JSON","stringify","editReview","update","deleteReview","reviewReducer","state","action","allReviews","console","log","forEach","newState"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AAGA,MAAMC,IAAI,GAAG,cAAb;AACA,MAAMC,GAAG,GAAG,aAAZ;AACA,MAAMC,IAAI,GAAG,cAAb;AACA,MAAMC,MAAM,GAAG,gBAAf;;AAGA,MAAMC,UAAU,GAAGC,OAAO,KAAK;AAC7BC,EAAAA,IAAI,EAAEN,IADuB;AAE7BK,EAAAA;AAF6B,CAAL,CAA1B;;AAKA,MAAME,GAAG,GAAGC,MAAM,KAAK;AACrBF,EAAAA,IAAI,EAAEL,GADe;AAErBO,EAAAA;AAFqB,CAAL,CAAlB;;AAKA,MAAMC,IAAI,GAAGC,MAAM,KAAK;AACtBJ,EAAAA,IAAI,EAAEJ,IADgB;AAEtBQ,EAAAA;AAFsB,CAAL,CAAnB;;AAKA,MAAMC,MAAM,GAAGC,EAAE,KAAK;AACpBN,EAAAA,IAAI,EAAEH,MADc;AAEpBS,EAAAA;AAFoB,CAAL,CAAjB;;AAKA,OAAO,MAAMC,UAAU,GAAID,EAAD,IAAQ,MAAME,QAAN,IAAkB;AAClD,QAAMC,GAAG,GAAG,MAAMhB,SAAS,CAAE,cAAF,CAA3B,CADkD,CACL;;AAE7C,MAAIgB,GAAG,CAACC,EAAR,EAAY;AACV,UAAMX,OAAO,GAAG,MAAMU,GAAG,CAACE,IAAJ,EAAtB;AAEAH,IAAAA,QAAQ,CAACV,UAAU,CAACC,OAAD,CAAX,CAAR;AACD;AACF,CARM;AAWP,OAAO,MAAMa,SAAS,GAAIC,SAAD,IAAe,MAAML,QAAN,IAAkB;AACxD,QAAMC,GAAG,GAAG,MAAMhB,SAAS,CAAC,cAAD,EAAiB;AAC1CqB,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFiC;AAG1CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAC,GAAGL;AAAJ,KAAf;AAHoC,GAAjB,CAA3B;;AAMA,MAAIJ,GAAG,CAACC,EAAR,EAAY;AACV,UAAMR,MAAM,GAAG,MAAMO,GAAG,CAACE,IAAJ,EAArB;AACD,WAAOH,QAAQ,CAACP,GAAG,CAACC,MAAD,CAAJ,CAAf;AACA;AACF,CAXM;AAcP,OAAO,MAAMiB,UAAU,GAAIC,MAAD,IAAY,MAAMZ,QAAN,IAAkB;AACtD,QAAMC,GAAG,GAAG,MAAMhB,SAAS,CAAC,mBAAD,EAAsB;AAC/CqB,IAAAA,MAAM,EAAE,KADuC;AAE/CC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFsC;AAG/CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAC,GAAGE;AAAJ,KAAf;AAHyC,GAAtB,CAA3B;;AAMA,MAAIX,GAAG,CAACC,EAAR,EAAY;AACV,UAAMR,MAAM,GAAG,MAAMO,GAAG,CAACE,IAAJ,EAArB;AAEA,UAAM,CAACP,MAAD,IAAWF,MAAM,CAAC,CAAD,CAAvB;AAEA,WAAO,MAAMM,QAAQ,CAACL,IAAI,CAACC,MAAD,CAAL,CAArB;AACD;AACF,CAdM;AAgBP,OAAO,MAAMiB,YAAY,GAAKnB,MAAF,IAAe,MAAMM,QAAN,IAAkB;AAE3D,QAAMC,GAAG,GAAG,MAAMhB,SAAS,CAAE,gBAAeS,MAAM,CAACI,EAAG,EAA3B,EAA8B;AACvDQ,IAAAA,MAAM,EAAE;AAD+C,GAA9B,CAA3B;;AAIA,MAAGL,GAAG,CAACC,EAAP,EAAW;AACTF,IAAAA,QAAQ,CAACH,MAAM,CAACH,MAAM,CAACI,EAAR,CAAP,CAAR;AACD;AACF,CATM;;AAYP,MAAMgB,aAAa,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC5C,UAAOA,MAAM,CAACxB,IAAd;AACE,SAAKN,IAAL;AACE;AACE,cAAM+B,UAAU,GAAG,EAAnB;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACzB,OAAnB;AACFyB,QAAAA,MAAM,CAACzB,OAAP,CAAe6B,OAAf,CAAuB1B,MAAM,IAAI;AAC/BuB,UAAAA,UAAU,CAACvB,MAAM,CAACI,EAAR,CAAV,GAAwBJ,MAAxB;AACD,SAFD;AAGAwB,QAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,eAAOA,UAAP;AAED;;AACH,SAAK9B,GAAL;AACE;AACA,cAAMkC,QAAQ,GAAG,EAAC,GAAGN;AAAJ,SAAjB;AACAM,QAAAA,QAAQ,CAACL,MAAM,CAACtB,MAAP,CAAcI,EAAf,CAAR,GAA6BkB,MAAM,CAACtB,MAApC;AACA,eAAO2B,QAAP;AACC;;AACH,SAAKhC,MAAL;AACE;AACE,cAAMgC,QAAQ,GAAG,EAAE,GAAGN;AAAL,SAAjB;AACA,eAAOM,QAAQ,CAACL,MAAM,CAAClB,EAAR,CAAf;AACA,eAAOuB,QAAP;AACD;;AACH,SAAKjC,IAAL;AACE;AACE,cAAMiC,QAAQ,GAAG,EAAE,GAAGN,KAAL;AACjB,WAACC,MAAM,CAACpB,MAAP,CAAcE,EAAf,GAAoB,EAClB,GAAGiB,KAAK,CAACC,MAAM,CAACpB,MAAP,CAAcE,EAAf,CADU;AAElBU,YAAAA,IAAI,EAAEQ,MAAM,CAACpB,MAAP,CAAcY;AAFF;AADH,SAAjB;AAMA,eAAOa,QAAP;AACD;;AACH;AACE,aAAON,KAAP;AAnCJ;;AAoCC;AAEF,CAvCD;;AAyCA,eAAeD,aAAf","sourcesContent":["import { csrfFetch } from './csrf';\n\n\nconst FIND = 'reviews/FIND';\nconst ADD = 'reviews/ADD';\nconst EDIT = 'reviews/EDIT';\nconst DELETE = 'reviews/DELETE';\n\n\nconst reviewFind = reviews => ({\n  type: FIND,\n  reviews\n});\n\nconst add = review => ({\n  type: ADD,\n  review\n});\n\nconst edit = change => ({\n  type: EDIT,\n  change\n})\n\nconst remove = id => ({\n  type: DELETE,\n  id\n})\n\nexport const getReviews = (id) => async dispatch => {\n  const res = await csrfFetch(`/api/reviews`,);//${id}`\n\n  if (res.ok) {\n    const reviews = await res.json();\n\n    dispatch(reviewFind(reviews));\n  }\n};\n\n\nexport const addReview = (newReview) => async dispatch => {\n  const res = await csrfFetch('/api/reviews', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({...newReview})\n  });\n\n  if (res.ok) {\n    const review = await res.json();\n   return dispatch(add(review));\n  }\n};\n\n\nexport const editReview = (update) => async dispatch => {\n  const res = await csrfFetch('/api/reviews/edit', {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({...update})\n  });\n\n  if (res.ok) {\n    const review = await res.json();\n\n    const [change] = review[1];\n\n    return await dispatch(edit(change));\n  }\n}\n\nexport const deleteReview = ( review ) =>  async dispatch => {\n\n  const res = await csrfFetch(`/api/reviews/${review.id}`, {\n    method: 'DELETE'\n  });\n\n  if(res.ok) {\n    dispatch(remove(review.id))\n  }\n}\n\n\nconst reviewReducer = (state = {}, action) => {\n  switch(action.type) {\n    case FIND:\n      {\n        const allReviews = {};\n          console.log(action.reviews)\n        action.reviews.forEach(review => {\n          allReviews[review.id] = review;\n        });\n        console.log(allReviews)\n        return allReviews;\n\n      }\n    case ADD:\n      {\n      const newState = {...state}\n      newState[action.review.id] = action.review\n      return newState;\n      }\n    case DELETE:\n      {\n        const newState = { ...state }\n        delete newState[action.id]\n        return newState\n      }\n    case EDIT:\n      {\n        const newState = { ...state,\n        [action.change.id]: {\n          ...state[action.change.id],\n          body: action.change.body\n        }\n        }\n        return newState\n      }\n    default:\n      return state;\n  };\n\n}\n\nexport default reviewReducer;\n"]},"metadata":{},"sourceType":"module"}