{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst ADD_RESERVATION = \"reservation/ADD\";\nconst STORE_RESERVATION = \"reservation/STORE\";\nconst GET_RESERVATION = \"reservation/GET\";\nconst DELETE_RESERVATION = \"reservation/DELETE\"; /////////////////// ACTION CREATORS ////////////////////\n\nconst addReservation = reservation => ({\n  type: ADD_RESERVATION,\n  reservation\n});\n\nconst newReservation = reservation => ({\n  type: STORE_RESERVATION,\n  reservation\n});\n\nconst getReservation = reservation => ({\n  type: GET_RESERVATION,\n  reservation\n});\n\nconst deleteReservation = reservation => ({\n  type: DELETE_RESERVATION,\n  reservation\n}); //////////////// THUNK ACTION CREATORS ////////////////////\n\n\nexport const createReservation = reservation => async dispatch => {\n  const response = await csrfFetch(`/api/reservation`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(reservation)\n  });\n\n  if (response.ok) {\n    const reservation = await response.json();\n    dispatch(addReservation(reservation));\n    return reservation;\n  }\n};\nexport const storeNewReservation = reservation => async dispatch => {\n  dispatch(newReservation(reservation));\n  return reservation;\n};\nexport const getReservations = userId => async dispatch => {\n  const response = await csrfFetch(`/api/reservation`);\n\n  if (response.ok) {\n    const reservation = await response.json();\n    dispatch(getReservation(reservation));\n    return reservation;\n  }\n\n  ;\n};\nexport const cancelReservation = reservation => async dispatch => {\n  const response = await csrfFetch(`/api/reservation/${reservation}`, {\n    method: \"DELETE\"\n  });\n\n  if (response.ok) {\n    const reservationId = await response.json();\n    dispatch(deleteReservation(reservationId));\n  }\n\n  ;\n}; /////////////////////// REDUCER //////////////////////////\n\nconst initialState = {};\n\nconst reservationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_RESERVATION:\n      return action.reservation;\n\n    case STORE_RESERVATION:\n      return action.reservation;\n\n    case GET_RESERVATION:\n      return action.reservation;\n\n    case DELETE_RESERVATION:\n      const newState = { ...state\n      };\n      delete newState[action.reservation];\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default reservationReducer;","map":{"version":3,"sources":["/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/store/reservations.js"],"names":["csrfFetch","ADD_RESERVATION","STORE_RESERVATION","GET_RESERVATION","DELETE_RESERVATION","addReservation","reservation","type","newReservation","getReservation","deleteReservation","createReservation","dispatch","response","method","headers","body","JSON","stringify","ok","json","storeNewReservation","getReservations","userId","cancelReservation","reservationId","initialState","reservationReducer","state","action","newState"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AAEA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,iBAAiB,GAAI,mBAA3B;AACA,MAAMC,eAAe,GAAI,iBAAzB;AACA,MAAMC,kBAAkB,GAAI,oBAA5B,C,CAEA;;AAEA,MAAMC,cAAc,GAAIC,WAAW,KAAK;AACpCC,EAAAA,IAAI,EAAEN,eAD8B;AAEpCK,EAAAA;AAFoC,CAAL,CAAnC;;AAKA,MAAME,cAAc,GAAGF,WAAW,KAAK;AACnCC,EAAAA,IAAI,EAAEL,iBAD6B;AAEnCI,EAAAA;AAFmC,CAAL,CAAlC;;AAKA,MAAMG,cAAc,GAAKH,WAAD,KAAkB;AACtCC,EAAAA,IAAI,EAAEJ,eADgC;AAEtCG,EAAAA;AAFsC,CAAlB,CAAxB;;AAKA,MAAMI,iBAAiB,GAAKJ,WAAD,KAAkB;AACzCC,EAAAA,IAAI,EAAEH,kBADmC;AAEzCE,EAAAA;AAFyC,CAAlB,CAA3B,C,CAKA;;;AAEA,OAAO,MAAMK,iBAAiB,GAAIL,WAAW,IAAI,MAAOM,QAAP,IAAoB;AACjE,QAAMC,QAAQ,GAAG,MAAMb,SAAS,CAAE,kBAAF,EAAqB;AACjDc,IAAAA,MAAM,EAAE,MADyC;AAEjDC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFwC;AAGjDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,WAAf;AAH2C,GAArB,CAAhC;;AAMA,MAAIO,QAAQ,CAACM,EAAb,EAAiB;AACb,UAAMb,WAAW,GAAG,MAAMO,QAAQ,CAACO,IAAT,EAA1B;AACAR,IAAAA,QAAQ,CAACP,cAAc,CAAEC,WAAF,CAAf,CAAR;AACA,WAAOA,WAAP;AACH;AACJ,CAZM;AAcP,OAAO,MAAMe,mBAAmB,GAAIf,WAAW,IAAI,MAAOM,QAAP,IAAoB;AACnEA,EAAAA,QAAQ,CAACJ,cAAc,CAAEF,WAAF,CAAf,CAAR;AACA,SAAOA,WAAP;AACH,CAHM;AAKP,OAAO,MAAMgB,eAAe,GAAIC,MAAD,IAAY,MAAOX,QAAP,IAAoB;AAC3D,QAAMC,QAAQ,GAAG,MAAMb,SAAS,CAAE,kBAAF,CAAhC;;AAEA,MAAIa,QAAQ,CAACM,EAAb,EAAiB;AACb,UAAMb,WAAW,GAAG,MAAMO,QAAQ,CAACO,IAAT,EAA1B;AACAR,IAAAA,QAAQ,CAACH,cAAc,CAAEH,WAAF,CAAf,CAAR;AACA,WAAOA,WAAP;AACH;;AAAA;AACJ,CARM;AAUP,OAAO,MAAMkB,iBAAiB,GAAKlB,WAAD,IAAiB,MAAOM,QAAP,IAAoB;AACnE,QAAMC,QAAQ,GAAG,MAAMb,SAAS,CAAE,oBAAmBM,WAAY,EAAjC,EAAoC;AAChEQ,IAAAA,MAAM,EAAE;AADwD,GAApC,CAAhC;;AAIA,MAAID,QAAQ,CAACM,EAAb,EAAiB;AACb,UAAMM,aAAa,GAAG,MAAMZ,QAAQ,CAACO,IAAT,EAA5B;AACAR,IAAAA,QAAQ,CAACF,iBAAiB,CAAEe,aAAF,CAAlB,CAAR;AACH;;AAAA;AACJ,CATM,C,CAWP;;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACtB,IAAf;AACI,SAAKN,eAAL;AACI,aAAO4B,MAAM,CAACvB,WAAd;;AACJ,SAAKJ,iBAAL;AACI,aAAO2B,MAAM,CAACvB,WAAd;;AACJ,SAAKH,eAAL;AACI,aAAO0B,MAAM,CAACvB,WAAd;;AACJ,SAAKF,kBAAL;AACI,YAAM0B,QAAQ,GAAG,EAAE,GAAGF;AAAL,OAAjB;AACA,aAAOE,QAAQ,CAACD,MAAM,CAACvB,WAAR,CAAf;AACA,aAAOwB,QAAP;;AACJ;AACI,aAAOF,KAAP;AAZR;AAcH,CAfD;;AAiBA,eAAeD,kBAAf","sourcesContent":["import { csrfFetch } from './csrf';\n\nconst ADD_RESERVATION = \"reservation/ADD\";\nconst STORE_RESERVATION  = \"reservation/STORE\";\nconst GET_RESERVATION  = \"reservation/GET\";\nconst DELETE_RESERVATION  = \"reservation/DELETE\";\n\n/////////////////// ACTION CREATORS ////////////////////\n\nconst addReservation  = reservation => ({\n    type: ADD_RESERVATION ,\n    reservation\n});\n\nconst newReservation = reservation => ({\n    type: STORE_RESERVATION ,\n    reservation\n});\n\nconst getReservation  = (reservation) => ({\n    type: GET_RESERVATION ,\n    reservation\n});\n\nconst deleteReservation  = (reservation) => ({\n    type: DELETE_RESERVATION ,\n    reservation\n});\n\n//////////////// THUNK ACTION CREATORS ////////////////////\n\nexport const createReservation  = reservation => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservation`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(reservation)\n    });\n\n    if (response.ok) {\n        const reservation = await response.json();\n        dispatch(addReservation (reservation));\n        return reservation;\n    }\n}\n\nexport const storeNewReservation  = reservation => async (dispatch) => {\n    dispatch(newReservation (reservation))\n    return reservation;\n}\n\nexport const getReservations = (userId) => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservation`);\n\n    if (response.ok) {\n        const reservation = await response.json();\n        dispatch(getReservation (reservation));\n        return reservation;\n    };\n}\n\nexport const cancelReservation  = (reservation) => async (dispatch) => {\n    const response = await csrfFetch(`/api/reservation/${reservation}`, {\n        method: \"DELETE\"\n    });\n\n    if (response.ok) {\n        const reservationId = await response.json();\n        dispatch(deleteReservation (reservationId));\n    };\n}\n\n/////////////////////// REDUCER //////////////////////////\n\nconst initialState = {};\n\nconst reservationReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_RESERVATION :\n            return action.reservation;\n        case STORE_RESERVATION :\n            return action.reservation;\n        case GET_RESERVATION :\n            return action.reservation;\n        case DELETE_RESERVATION :\n            const newState = { ...state }\n            delete newState[action.reservation]\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default reservationReducer;\n"]},"metadata":{},"sourceType":"module"}