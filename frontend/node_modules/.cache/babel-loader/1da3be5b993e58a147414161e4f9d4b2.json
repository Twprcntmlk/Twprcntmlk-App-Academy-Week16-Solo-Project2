{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst LOAD = 'photos/LOAD';\nconst FIND_ONE = 'photos/FIND_ONE';\n\nconst load = photos => ({\n  type: LOAD,\n  photos\n});\n\nconst getOne = photo => ({\n  type: FIND_ONE,\n  photo\n}); //Get photos from database//////////////////////////////\n\n\nexport const getphotos = () => async dispatch => {\n  const res = await csrfFetch('/api/photos'); // problem is here?\n\n  if (res.ok) {\n    const photos = await res.json();\n    dispatch(load(photos));\n  }\n}; //Get Specific photos from database//I might not need this\n\nexport const findphotos = id => async dispatch => {\n  const res = await csrfFetch(`/api/photos/${id}`);\n\n  if (res.ok) {\n    const photo = await res.json();\n    dispatch(getOne(photo));\n  }\n}; //Edit photos from database//////////////////////////////\n\nexport const editlistings = photo => async dispatch => {\n  const res = await csrfFetch(`/api/photos/${photo.id}`, {\n    method: \"PUT\",\n    body: JSON.stringify(photo)\n  });\n\n  if (res.ok) {\n    const PhotoId = await res.json();\n    dispatch(findphotos(PhotoId));\n  }\n};\n\nconst hotosReducer = (state = {}, action) => {\n  switch (action.type) {\n    case LOAD:\n      {\n        const allPhotos = {};\n        action.photos.forEach(photo => {\n          allPhotos[photo.id] = photo;\n        });\n        return { ...allPhotos\n        };\n      }\n\n    case FIND_ONE:\n      return { ...action.photo\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default PhotosReducer;","map":{"version":3,"sources":["/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/store/photo.js"],"names":["csrfFetch","LOAD","FIND_ONE","load","photos","type","getOne","photo","getphotos","dispatch","res","ok","json","findphotos","id","editlistings","method","body","JSON","stringify","PhotoId","hotosReducer","state","action","allPhotos","forEach","PhotosReducer"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AAEA,MAAMC,IAAI,GAAG,aAAb;AACA,MAAMC,QAAQ,GAAG,iBAAjB;;AAGA,MAAMC,IAAI,GAAGC,MAAM,KAAK;AACtBC,EAAAA,IAAI,EAAEJ,IADgB;AAEtBG,EAAAA;AAFsB,CAAL,CAAnB;;AAKA,MAAME,MAAM,GAAGC,KAAK,KAAK;AACrBF,EAAAA,IAAI,EAAEH,QADe;AAErBK,EAAAA;AAFqB,CAAL,CAApB,C,CAKA;;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACjD,QAAMC,GAAG,GAAG,MAAMV,SAAS,CAAC,aAAD,CAA3B,CADiD,CACL;;AAC5C,MAAIU,GAAG,CAACC,EAAR,EAAY;AACR,UAAMP,MAAM,GAAG,MAAMM,GAAG,CAACE,IAAJ,EAArB;AACAH,IAAAA,QAAQ,CAACN,IAAI,CAACC,MAAD,CAAL,CAAR;AACC;AACJ,CANM,C,CAQP;;AACA,OAAO,MAAMS,UAAU,GAAIC,EAAD,IAAQ,MAAML,QAAN,IAAkB;AACpD,QAAMC,GAAG,GAAG,MAAMV,SAAS,CAAE,eAAcc,EAAG,EAAnB,CAA3B;;AAEA,MAAIJ,GAAG,CAACC,EAAR,EAAY;AACR,UAAMJ,KAAK,GAAG,MAAMG,GAAG,CAACE,IAAJ,EAApB;AACAH,IAAAA,QAAQ,CAACH,MAAM,CAACC,KAAD,CAAP,CAAR;AACH;AACA,CAPM,C,CAQP;;AACA,OAAO,MAAMQ,YAAY,GAAIR,KAAD,IAAW,MAAME,QAAN,IAAkB;AACrD,QAAMC,GAAG,GAAG,MAAMV,SAAS,CAAE,eAAcO,KAAK,CAACO,EAAG,EAAzB,EAA4B;AAC3CE,IAAAA,MAAM,EAAE,KADmC;AAE3CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,KAAf;AAFqC,GAA5B,CAA3B;;AAKA,MAAIG,GAAG,CAACC,EAAR,EAAY;AACR,UAAMS,OAAO,GAAG,MAAMV,GAAG,CAACE,IAAJ,EAAtB;AACAH,IAAAA,QAAQ,CAACI,UAAU,CAACO,OAAD,CAAX,CAAR;AACH;AACA,CAVE;;AAaP,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC7C,UAAOA,MAAM,CAAClB,IAAd;AACI,SAAKJ,IAAL;AAAU;AACN,cAAMuB,SAAS,GAAG,EAAlB;AACAD,QAAAA,MAAM,CAACnB,MAAP,CAAcqB,OAAd,CAAsBlB,KAAK,IAAI;AAC3BiB,UAAAA,SAAS,CAACjB,KAAK,CAACO,EAAP,CAAT,GAAsBP,KAAtB;AACH,SAFD;AAGA,eAAO,EAAC,GAAGiB;AAAJ,SAAP;AACH;;AAED,SAAKtB,QAAL;AACI,aAAO,EAAC,GAAGqB,MAAM,CAAChB;AAAX,OAAP;;AACJ;AACI,aAAOe,KAAP;AAZR;;AAaC;AAEA,CAhBD;;AAkBA,eAAeI,aAAf","sourcesContent":["import { csrfFetch } from './csrf';\n\nconst LOAD = 'photos/LOAD';\nconst FIND_ONE = 'photos/FIND_ONE';\n\n\nconst load = photos => ({\n  type: LOAD,\n  photos\n});\n\nconst getOne = photo => ({\n    type: FIND_ONE,\n    photo\n  });\n\n//Get photos from database//////////////////////////////\nexport const getphotos = () => async dispatch => {\nconst res = await csrfFetch('/api/photos'); // problem is here?\nif (res.ok) {\n    const photos = await res.json();\n    dispatch(load(photos));\n    }\n}\n\n//Get Specific photos from database//I might not need this\nexport const findphotos = (id) => async dispatch => {\nconst res = await csrfFetch(`/api/photos/${id}`);\n\nif (res.ok) {\n    const photo = await res.json();\n    dispatch(getOne(photo));\n}\n};\n//Edit photos from database//////////////////////////////\nexport const editlistings = (photo) => async dispatch => {\n    const res = await csrfFetch(`/api/photos/${photo.id}`, {\n                method: \"PUT\",\n                body: JSON.stringify(photo),\n            });\n\n    if (res.ok) {\n        const PhotoId = await res.json();\n        dispatch(findphotos(PhotoId));\n    }\n    };\n\n\nconst hotosReducer = (state = {}, action) => {\nswitch(action.type) {\n    case LOAD:{\n        const allPhotos = {};\n        action.photos.forEach(photo => {\n            allPhotos[photo.id] = photo;\n        });\n        return {...allPhotos}\n    }\n\n    case FIND_ONE:\n        return {...action.photo}\n    default:\n        return state;\n};\n\n}\n\nexport default PhotosReducer;\n"]},"metadata":{},"sourceType":"module"}