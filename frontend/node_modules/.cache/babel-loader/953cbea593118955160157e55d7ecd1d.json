{"ast":null,"code":"var _jsxFileName = \"/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/components/Reservation/index.js\";\n// frontend/src/components/Navigation/ProfileButton.js\nimport React from \"react\"; // useEffect,{ useState }\n\nimport { useDispatch } from 'react-redux'; //, useSelector\n\nimport { addReview } from '../../store/reviews';\nimport 'react-dates/initialize';\nimport { DateRangePicker } from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport './reservations.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReservationForm({\n  userId,\n  listingId\n}) {\n  //will probably need to pass id\n  // const pokeTypes = useSelector(state => state.pokemon.types);\n  // const dispatch = useDispatch();\n  // const [checkInDate, setcheckInDate] = useState(\"\");\n  // const [checkOutDate, setcheckOutDate] = useState(\"\");\n  // const [startDate, setStartDate] = useState('2021-05-01');\n  // const [endDate, setendDate] = useState('2021-06-30');\n  // const [createdAt, setCreatedAt] = useState(new Date());\n  //   const updateReview = (e) => setReview(e.target.value);\n  //   const updateCleanliness = (e) => setCleanliness(e.target.value);\n  //   const updateCommunication = (e) => setCommunication(e.target.value);\n  //   const updateCheckIn = (e) => setCheckIn(e.target.value);\n  //   const updateAccuracy= (e) => setAccuracy(e.target.value);\n  //   const updateLocation = (e) => setLocation(e.target.value);\n  //   const updateValue = (e) => setValue(e.target.value);\n  // const updateCreatedAt= (e) => setCreatedAt(e.target.value);\n  // useEffect(() => {\n  //   dispatch(getPokemonTypes());\n  // }, [dispatch]);\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   const payload = {\n  //   userId,\n  //   listingId,\n  //   review,\n  //   cleanliness,\n  //   communication,\n  //   checkIn,\n  //   accuracy,\n  //   location,\n  //   value,\n  // };\n  //   const addedReview = await dispatch(addReview(payload));\n  //   if (addedReview) {\n  //   //   setReview('');\n  //   //   setCleanliness(0);\n  //   //   setCommunication(0);\n  //   //   setCheckIn(0);\n  //   //   setAccuracy(0);\n  //   //   setLocation(0);\n  //   //   setValue(0);\n  //   }\n  // };\n  // const handleCancelClick = (e) => {\n  //   e.preventDefault();\n  // };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"edit-form-holder centered middled\",\n    children: \"THIS IS THE DATE RANGE AND ADDING RES COMPONENT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ReservationForm;\nexport default ReservationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReservationForm\");","map":{"version":3,"sources":["/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/components/Reservation/index.js"],"names":["React","useDispatch","addReview","DateRangePicker","ReservationForm","userId","listingId"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,SAASC,WAAT,QAA4B,aAA5B,C,CAA0C;;AAC1C,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAO,wBAAP;AACA,SAASC,eAAT,QAA+B,aAA/B;AACA,OAAO,qCAAP;AACA,OAAO,oBAAP;;;AAEA,SAASC,eAAT,CAA0B;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAA1B,EAA+C;AAAE;AAC/C;AACA;AAEA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA,sBACE;AAAS,IAAA,SAAS,EAAC,mCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;KAhFQF,e;AAkFT,eAAeA,eAAf","sourcesContent":["// frontend/src/components/Navigation/ProfileButton.js\nimport React from \"react\"; // useEffect,{ useState }\nimport { useDispatch } from 'react-redux';//, useSelector\nimport { addReview } from '../../store/reviews';\nimport 'react-dates/initialize';\nimport { DateRangePicker} from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport './reservations.css';\n\nfunction ReservationForm ({userId, listingId}) { //will probably need to pass id\n  // const pokeTypes = useSelector(state => state.pokemon.types);\n  // const dispatch = useDispatch();\n\n  // const [checkInDate, setcheckInDate] = useState(\"\");\n  // const [checkOutDate, setcheckOutDate] = useState(\"\");\n  // const [startDate, setStartDate] = useState('2021-05-01');\n  // const [endDate, setendDate] = useState('2021-06-30');\n  // const [createdAt, setCreatedAt] = useState(new Date());\n\n//   const updateReview = (e) => setReview(e.target.value);\n//   const updateCleanliness = (e) => setCleanliness(e.target.value);\n//   const updateCommunication = (e) => setCommunication(e.target.value);\n//   const updateCheckIn = (e) => setCheckIn(e.target.value);\n//   const updateAccuracy= (e) => setAccuracy(e.target.value);\n//   const updateLocation = (e) => setLocation(e.target.value);\n//   const updateValue = (e) => setValue(e.target.value);\n  // const updateCreatedAt= (e) => setCreatedAt(e.target.value);\n\n  // useEffect(() => {\n  //   dispatch(getPokemonTypes());\n  // }, [dispatch]);\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n\n  //   const payload = {\n    //   userId,\n    //   listingId,\n    //   review,\n    //   cleanliness,\n    //   communication,\n    //   checkIn,\n    //   accuracy,\n    //   location,\n    //   value,\n    // };\n\n  //   const addedReview = await dispatch(addReview(payload));\n  //   if (addedReview) {\n  //   //   setReview('');\n  //   //   setCleanliness(0);\n  //   //   setCommunication(0);\n  //   //   setCheckIn(0);\n  //   //   setAccuracy(0);\n  //   //   setLocation(0);\n  //   //   setValue(0);\n  //   }\n  // };\n\n  // const handleCancelClick = (e) => {\n  //   e.preventDefault();\n\n  // };\n\n  return (\n    <section className=\"edit-form-holder centered middled\">\n      THIS IS THE DATE RANGE AND ADDING RES COMPONENT\n        {/* <DateRangePicker\n  startDate={startDate} // momentPropTypes.momentObj or null,\n  startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\n  endDate={endDate} // momentPropTypes.momentObj or null,\n  endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\n  onDatesChange={({ startDate, endDate })} // PropTypes.func.isRequired,\n  focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n  onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\n/> */}\n    {/* <form onSubmit={handleSubmit}>\n      <textarea value={review} placeholder='write your review here...' onChange={updateReview}></textarea>\n      <input value={cleanliness} type='number' onChange={updateCleanliness }></input>\n      <input value={communication} type='number' onChange={updateCommunication}></input>\n      <input value={checkIn} type='number' onChange={updateCheckIn}></input>\n      <input value={accuracy} type='number' onChange={updateAccuracy}></input>\n      <input value={location} type='number' onChange={updateLocation}></input>\n      <input value={value} type='number' onChange={updateValue}></input>\n      <button type=\"submit\">Submit Review</button>\n      <button type=\"button\" onClick={handleCancelClick}>Cancel</button>\n    </form> */}\n  </section>\n  );\n}\n\nexport default ReservationForm;\n"]},"metadata":{},"sourceType":"module"}