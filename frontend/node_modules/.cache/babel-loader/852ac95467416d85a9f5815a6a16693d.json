{"ast":null,"code":"var _jsxFileName = \"/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/components/GoogleMaps/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport { useSearch } from '../../context/SearchContext';\nimport { useHistory } from 'react-router'; // import { Redirect, useHistory } from 'react-router';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  width: '45%',\n  height: '822px'\n};\nexport function MapContainer(props) {\n  _s();\n\n  const {\n    coordinates\n  } = props;\n  const history = useHistory();\n  const {\n    location,\n    setLocation\n  } = useSearch();\n\n  if (!location.lat) {\n    const newLocation = {\n      lat: 32.8328,\n      lng: -117.2713\n    };\n    setLocation(newLocation);\n  }\n\n  const onClick2 = id => {\n    history.push(`/listings/${id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Map, {\n    google: props.google,\n    zoom: 7,\n    style: mapStyles,\n    initialCenter: location,\n    setCenter: true,\n    children: coordinates.map(coordinate => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: coordinate.lat,\n        lng: coordinate.long\n      },\n      onClick: () => onClick2(coordinate.id)\n    }, coordinate.lat, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MapContainer, \"gqW7wahixl0bi2cRV14+UmEPZHo=\", false, function () {\n  return [useHistory, useSearch];\n});\n\n_c = MapContainer;\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY\n})(MapContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"sources":["/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/components/GoogleMaps/index.js"],"names":["React","Map","GoogleApiWrapper","Marker","useSearch","useHistory","mapStyles","width","height","MapContainer","props","coordinates","history","location","setLocation","lat","newLocation","lng","onClick2","id","push","google","map","coordinate","long","apiKey","process","env","REACT_APP_GOOGLE_MAPS_KEY"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,KADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;AAKA,OAAO,SAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AACA,QAAME,OAAO,GAAGP,UAAU,EAA1B;AAEI,QAAM;AACFQ,IAAAA,QADE;AAEFC,IAAAA;AAFE,MAGJV,SAAS,EAHX;;AAMJ,MAAI,CAACS,QAAQ,CAACE,GAAd,EAAmB;AACjB,UAAMC,WAAW,GAAG;AAACD,MAAAA,GAAG,EAAE,OAAN;AAAgBE,MAAAA,GAAG,EAAE,CAAC;AAAtB,KAApB;AACAH,IAAAA,WAAW,CAACE,WAAD,CAAX;AACD;;AAGD,QAAME,QAAQ,GAAIC,EAAD,IAAQ;AACvBP,IAAAA,OAAO,CAACQ,IAAR,CAAc,aAAYD,EAAG,EAA7B;AACD,GAFD;;AAIA,sBACE,QAAC,GAAD;AACE,IAAA,MAAM,EAAET,KAAK,CAACW,MADhB;AAEE,IAAA,IAAI,EAAE,CAFR;AAGE,IAAA,KAAK,EAAEf,SAHT;AAIE,IAAA,aAAa,EACTO,QALN;AAOE,IAAA,SAAS,MAPX;AAAA,cASGF,WAAW,CAACW,GAAZ,CAAiBC,UAAD,iBACT,QAAC,MAAD;AAEE,MAAA,QAAQ,EAAE;AAACR,QAAAA,GAAG,EAAEQ,UAAU,CAACR,GAAjB;AAAsBE,QAAAA,GAAG,EAAEM,UAAU,CAACC;AAAtC,OAFZ;AAGE,MAAA,OAAO,EAAE,MAAMN,QAAQ,CAACK,UAAU,CAACJ,EAAZ;AAHzB,OACKI,UAAU,CAACR,GADhB;AAAA;AAAA;AAAA;AAAA,YADP;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAqBH;;GAzCeN,Y;UAEIJ,U,EAKVD,S;;;KAPMK,Y;AA2ChB,eAAeP,gBAAgB,CAAC;AAC9BuB,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADU,CAAD,CAAhB,CAEZnB,YAFY,CAAf","sourcesContent":["import React from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport { useSearch } from '../../context/SearchContext';\nimport { useHistory } from 'react-router';\n\n// import { Redirect, useHistory } from 'react-router';\n\nconst mapStyles = {\n  width: '45%',\n  height: '822px'\n};\n\nexport function MapContainer (props) {\n    const { coordinates} = props\n    const history = useHistory()\n\n        const {\n            location,\n            setLocation\n      } = useSearch()\n\n\n    if (!location.lat) {\n      const newLocation = {lat: 32.8328 , lng: -117.2713}\n      setLocation(newLocation)\n    }\n\n\n    const onClick2 = (id) => {\n      history.push(`/listings/${id}`)\n    }\n\n    return (\n      <Map\n        google={props.google}\n        zoom={7}\n        style={mapStyles}\n        initialCenter={\n            location\n        }\n        setCenter\n      >\n        {coordinates.map((coordinate) => (\n                <Marker\n                key={coordinate.lat}\n                  position={{lat: coordinate.lat, lng: coordinate.long}}\n                  onClick={() => onClick2(coordinate.id)}\n                />\n            )\n        )}\n      </Map>\n    );\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_GOOGLE_MAPS_KEY\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}