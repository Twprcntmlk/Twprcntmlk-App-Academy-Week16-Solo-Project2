{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst FIND = 'reviews/FIND';\nconst ADD = 'reviews/ADD';\nconst EDIT = 'reviews/EDIT';\nconst DELETE = 'reviews/DELETE';\n\nconst reviewFind = (reviews, id) => ({\n  type: FIND,\n  reviews,\n  id\n});\n\nconst add = review => ({\n  type: ADD,\n  review\n});\n\nconst edit = change => ({\n  type: EDIT,\n  change\n});\n\nconst remove = id => ({\n  type: DELETE,\n  id\n});\n\nexport const getReviews = id => async dispatch => {\n  const res = await csrfFetch(`/api/reviews`); //${id}`\n\n  if (res.ok) {\n    const reviews = await res.json();\n    dispatch(reviewFind(reviews, id));\n  }\n};\nexport const addReview = newReview => async dispatch => {\n  const res = await csrfFetch('/api/reviews', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...newReview\n    })\n  });\n\n  if (res.ok) {\n    const review = await res.json();\n    return dispatch(add(review));\n  }\n};\nexport const editReview = update => async dispatch => {\n  console.log(update);\n  const res = await csrfFetch('/api/reviews/edit', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(update)\n  });\n\n  if (res.ok) {\n    const updatedreview = await res.json();\n    console.log(\"STORE------\", updated); // const [change] = review[1];\n\n    return await dispatch(edit(review));\n  }\n};\nexport const deleteReview = id => async dispatch => {\n  console.log(\"AM I IN THE STORE\", id);\n  const res = await csrfFetch(`/api/reviews/${id}`, {\n    method: 'DELETE'\n  });\n\n  if (res.ok) {\n    dispatch(remove(id));\n  }\n};\n\nconst reviewReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FIND:\n      {\n        const allReviews = {};\n        action.reviews.forEach(review => {\n          allReviews[review.id] = review;\n        });\n        return allReviews;\n      }\n\n    case ADD:\n      {\n        const newState = { ...state\n        };\n        newState[action.review.id] = action.review;\n        return newState;\n      }\n\n    case DELETE:\n      {\n        const newState = { ...state\n        };\n        delete newState[action.id];\n        return newState;\n      }\n\n    case EDIT:\n      {\n        const newState = { ...state\n        }; // const newState = { ...state,\n        // [action.change.id]: {\n        //   ...state[action.change.id],\n        //   body: action.change.body\n        // }\n        // }\n\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default reviewReducer;","map":{"version":3,"sources":["/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/store/reviews.js"],"names":["csrfFetch","FIND","ADD","EDIT","DELETE","reviewFind","reviews","id","type","add","review","edit","change","remove","getReviews","dispatch","res","ok","json","addReview","newReview","method","headers","body","JSON","stringify","editReview","update","console","log","updatedreview","updated","deleteReview","reviewReducer","state","action","allReviews","forEach","newState"],"mappings":"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","sourcesContent":["import { csrfFetch } from './csrf';\n\n\nconst FIND = 'reviews/FIND';\nconst ADD = 'reviews/ADD';\nconst EDIT = 'reviews/EDIT';\nconst DELETE = 'reviews/DELETE';\n\n\nconst reviewFind = (reviews, id) => ({\n  type: FIND,\n  reviews,\n  id\n});\n\nconst add = review => ({\n  type: ADD,\n  review\n});\n\nconst edit = change => ({\n  type: EDIT,\n  change\n})\n\nconst remove = id => ({\n  type: DELETE,\n  id\n})\n\nexport const getReviews = (id) => async dispatch => {\n  const res = await csrfFetch(`/api/reviews`,);//${id}`\n\n  if (res.ok) {\n    const reviews = await res.json();\n\n    dispatch(reviewFind(reviews, id));\n  }\n};\n\n\nexport const addReview = (newReview) => async dispatch => {\n  const res = await csrfFetch('/api/reviews', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({...newReview})\n  });\n\n  if (res.ok) {\n    const review = await res.json();\n   return dispatch(add(review));\n  }\n};\n\n\nexport const editReview = (update) => async dispatch => {\n  console.log(update)\n  const res = await csrfFetch('/api/reviews/edit', {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(update)\n  });\n\n  if (res.ok) {\n    const updatedreview = await res.json();\n    console.log(\"STORE------\",updated)\n    // const [change] = review[1];\n\n    return await dispatch(edit(review));\n  }\n}\n\nexport const deleteReview = ( id ) =>  async dispatch => {\n  console.log(\"AM I IN THE STORE\",id)\n  const res = await csrfFetch(`/api/reviews/${id}`, {\n    method: 'DELETE'\n  });\n\n  if(res.ok) {\n    dispatch(remove(id))\n  }\n}\n\n\nconst reviewReducer = (state = {}, action) => {\n  switch(action.type) {\n    case FIND:\n      {\n        const allReviews = {};\n        action.reviews.forEach(review => {\n          allReviews[review.id] = review;\n        });\n        return allReviews;\n\n      }\n    case ADD:\n      {\n      const newState = {...state}\n      newState[action.review.id] = action.review\n      return newState;\n      }\n    case DELETE:\n      {\n        const newState = { ...state }\n        delete newState[action.id]\n        return newState\n      }\n    case EDIT:\n      {\n        const newState = { ...state }\n        // const newState = { ...state,\n        // [action.change.id]: {\n        //   ...state[action.change.id],\n        //   body: action.change.body\n        // }\n        // }\n        return newState\n      }\n    default:\n      return state;\n  };\n\n}\n\nexport default reviewReducer;\n"]},"metadata":{},"sourceType":"module"}