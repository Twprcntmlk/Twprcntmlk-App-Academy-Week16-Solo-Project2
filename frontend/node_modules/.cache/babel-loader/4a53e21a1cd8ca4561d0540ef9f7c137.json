{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst LOAD = 'messages/LOAD';\nconst ADD = 'messages/ADD';\n\nconst load = messages => ({\n  type: LOAD,\n  messages\n});\n\nconst add = message => ({\n  type: ADD,\n  message\n}); //Get messages from database//////////////////////////////\n\n\nexport const getmessages = () => async dispatch => {\n  const res = await csrfFetch('/api/messages'); // problem is here?\n\n  if (res.ok) {\n    const messages = await res.json();\n    dispatch(load(messages));\n  }\n}; //Get Specific messages from database//I might not need this\n\nexport const addmessages = messages => async dispatch => {\n  const res = await csrfFetch('/api/messages', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...messages\n    })\n  });\n\n  if (res.ok) {\n    const review = await res.json();\n    return dispatch(getmessages());\n  }\n}; //Edit messages from database//////////////////////////////\n// export const editlistings = (message) => async dispatch => {\n//     const res = await csrfFetch(`/api/messages/${message.id}`, {\n//                 method: \"PUT\",\n//                 body: JSON.stringify(message),\n//             });\n//     if (res.ok) {\n//         const listingId = await res.json();\n//         dispatch(findmessages(listingId));\n//     }\n//     };\n\nconst messagesReducer = (state = {}, action) => {\n  switch (action.type) {\n    case LOAD:\n      {\n        const allmessages = {};\n        action.messages.forEach(message => {\n          allmessages[message.id] = message;\n        });\n        return { ...allmessages\n        };\n      }\n\n    case ADD:\n      return { ...action.message\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default messagesReducer;","map":{"version":3,"sources":["/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/store/message.js"],"names":["csrfFetch","LOAD","ADD","load","messages","type","add","message","getmessages","dispatch","res","ok","json","addmessages","method","headers","body","JSON","stringify","review","messagesReducer","state","action","allmessages","forEach","id"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AAEA,MAAMC,IAAI,GAAG,eAAb;AACA,MAAMC,GAAG,GAAG,cAAZ;;AAGA,MAAMC,IAAI,GAAGC,QAAQ,KAAK;AACxBC,EAAAA,IAAI,EAAEJ,IADkB;AAExBG,EAAAA;AAFwB,CAAL,CAArB;;AAKA,MAAME,GAAG,GAAGC,OAAO,KAAK;AACpBF,EAAAA,IAAI,EAAEH,GADc;AAEpBK,EAAAA;AAFoB,CAAL,CAAnB,C,CAKA;;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACnD,QAAMC,GAAG,GAAG,MAAMV,SAAS,CAAC,eAAD,CAA3B,CADmD,CACL;;AAC9C,MAAIU,GAAG,CAACC,EAAR,EAAY;AACR,UAAMP,QAAQ,GAAG,MAAMM,GAAG,CAACE,IAAJ,EAAvB;AAEAH,IAAAA,QAAQ,CAACN,IAAI,CAACC,QAAD,CAAL,CAAR;AACC;AACJ,CAPM,C,CASP;;AACA,OAAO,MAAMS,WAAW,GAAIT,QAAD,IAAc,MAAMK,QAAN,IAAkB;AACvD,QAAMC,GAAG,GAAG,MAAMV,SAAS,CAAC,eAAD,EAAkB;AAC3Cc,IAAAA,MAAM,EAAE,MADmC;AAE3CC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFkC;AAG3CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAC,GAAGd;AAAJ,KAAf;AAHqC,GAAlB,CAA3B;;AAMA,MAAIM,GAAG,CAACC,EAAR,EAAY;AACV,UAAMQ,MAAM,GAAG,MAAMT,GAAG,CAACE,IAAJ,EAArB;AACD,WAAOH,QAAQ,CAACD,WAAW,EAAZ,CAAf;AACA;AACF,CAXI,C,CAaP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAGA,MAAMY,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAChD,UAAOA,MAAM,CAACjB,IAAd;AACI,SAAKJ,IAAL;AAAU;AACN,cAAMsB,WAAW,GAAG,EAApB;AACAD,QAAAA,MAAM,CAAClB,QAAP,CAAgBoB,OAAhB,CAAwBjB,OAAO,IAAI;AAC/BgB,UAAAA,WAAW,CAAChB,OAAO,CAACkB,EAAT,CAAX,GAA0BlB,OAA1B;AACH,SAFD;AAGA,eAAO,EAAC,GAAGgB;AAAJ,SAAP;AACH;;AAED,SAAKrB,GAAL;AACI,aAAO,EAAC,GAAGoB,MAAM,CAACf;AAAX,OAAP;;AACJ;AACI,aAAOc,KAAP;AAZR;;AAaC;AAEA,CAhBD;;AAkBA,eAAeD,eAAf","sourcesContent":["import { csrfFetch } from './csrf';\n\nconst LOAD = 'messages/LOAD';\nconst ADD = 'messages/ADD';\n\n\nconst load = messages => ({\n  type: LOAD,\n  messages\n});\n\nconst add = message => ({\n    type: ADD,\n    message\n  });\n\n//Get messages from database//////////////////////////////\nexport const getmessages = () => async dispatch => {\nconst res = await csrfFetch('/api/messages'); // problem is here?\nif (res.ok) {\n    const messages = await res.json();\n\n    dispatch(load(messages));\n    }\n}\n\n//Get Specific messages from database//I might not need this\nexport const addmessages = (messages) => async dispatch => {\n    const res = await csrfFetch('/api/messages', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({...messages})\n    });\n\n    if (res.ok) {\n      const review = await res.json();\n     return dispatch(getmessages());\n    }\n  };\n\n//Edit messages from database//////////////////////////////\n// export const editlistings = (message) => async dispatch => {\n//     const res = await csrfFetch(`/api/messages/${message.id}`, {\n//                 method: \"PUT\",\n//                 body: JSON.stringify(message),\n//             });\n\n//     if (res.ok) {\n//         const listingId = await res.json();\n//         dispatch(findmessages(listingId));\n//     }\n//     };\n\n\nconst messagesReducer = (state = {}, action) => {\nswitch(action.type) {\n    case LOAD:{\n        const allmessages = {};\n        action.messages.forEach(message => {\n            allmessages[message.id] = message;\n        });\n        return {...allmessages}\n    }\n\n    case ADD:\n        return {...action.message}\n    default:\n        return state;\n};\n\n}\n\nexport default messagesReducer;\n"]},"metadata":{},"sourceType":"module"}