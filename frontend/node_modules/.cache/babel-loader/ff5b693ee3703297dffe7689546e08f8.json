{"ast":null,"code":"import { csrfFetch } from './csrf';\nconst LOAD = 'listings/LOAD';\nconst FIND_ONE = 'listings/FIND_ONE';\n\nconst load = listing => ({\n  type: LOAD,\n  trees\n});\n\nconst getOne = listing => ({\n  type: FIND_ONE,\n  listing\n});\n\nexport const getlistings = () => async dispatch => {\n  const res = await csrfFetch('/api/listings');\n\n  if (res.ok) {\n    const listings = await res.json();\n    dispatch(load(listings));\n  }\n};\nexport const findlistings = id => async dispatch => {\n  const res = await csrfFetch(`/api/listings/${id}`);\n\n  if (res.ok) {\n    const listing = await res.json();\n    dispatch(getOne(listing));\n  }\n};\n\nconst listingsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case LOAD:\n      {\n        const alllistings = {};\n        action.listings.forEach(listing => {\n          alllistings[listing.id] = listing;\n        });\n        return { ...alllistings\n        };\n      }\n\n    case FIND_ONE:\n      return { ...action.listing\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default listingsReducer;","map":{"version":3,"sources":["/home/stephenchoung/aafolder/Week16/App-Academy-Week16-Solo-Project-Base/frontend/src/store/listings.js"],"names":["csrfFetch","LOAD","FIND_ONE","load","listing","type","trees","getOne","getlistings","dispatch","res","ok","listings","json","findlistings","id","listingsReducer","state","action","alllistings","forEach"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AAEA,MAAMC,IAAI,GAAG,eAAb;AACA,MAAMC,QAAQ,GAAG,mBAAjB;;AAGA,MAAMC,IAAI,GAAGC,OAAO,KAAK;AACvBC,EAAAA,IAAI,EAAEJ,IADiB;AAEvBK,EAAAA;AAFuB,CAAL,CAApB;;AAMA,MAAMC,MAAM,GAAGH,OAAO,KAAK;AACvBC,EAAAA,IAAI,EAAEH,QADiB;AAEvBE,EAAAA;AAFuB,CAAL,CAAtB;;AAME,OAAO,MAAMI,WAAW,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACjD,QAAMC,GAAG,GAAG,MAAMV,SAAS,CAAC,eAAD,CAA3B;;AAEA,MAAIU,GAAG,CAACC,EAAR,EAAY;AACV,UAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAvB;AACAJ,IAAAA,QAAQ,CAACN,IAAI,CAACS,QAAD,CAAL,CAAR;AACD;AACF,CAPM;AAUP,OAAO,MAAME,YAAY,GAAIC,EAAD,IAAQ,MAAMN,QAAN,IAAkB;AACpD,QAAMC,GAAG,GAAG,MAAMV,SAAS,CAAE,iBAAgBe,EAAG,EAArB,CAA3B;;AAEA,MAAIL,GAAG,CAACC,EAAR,EAAY;AACV,UAAMP,OAAO,GAAG,MAAMM,GAAG,CAACG,IAAJ,EAAtB;AACAJ,IAAAA,QAAQ,CAACF,MAAM,CAACH,OAAD,CAAP,CAAR;AACD;AACF,CAPM;;AAYP,MAAMY,eAAe,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC9C,UAAOA,MAAM,CAACb,IAAd;AACE,SAAKJ,IAAL;AACE;AACA,cAAMkB,WAAW,GAAG,EAApB;AACAD,QAAAA,MAAM,CAACN,QAAP,CAAgBQ,OAAhB,CAAwBhB,OAAO,IAAI;AACjCe,UAAAA,WAAW,CAACf,OAAO,CAACW,EAAT,CAAX,GAA0BX,OAA1B;AACD,SAFD;AAIA,eAAO,EACL,GAAGe;AADE,SAAP;AAGD;;AACD,SAAKjB,QAAL;AACC,aAAO,EAAC,GAAGgB,MAAM,CAACd;AAAX,OAAP;;AAED;AACE,aAAOa,KAAP;AAhBJ;;AAiBC;AAEF,CApBD;;AAsBA,eAAeD,eAAf","sourcesContent":["import { csrfFetch } from './csrf';\n\nconst LOAD = 'listings/LOAD';\nconst FIND_ONE = 'listings/FIND_ONE';\n\n\nconst load = listing => ({\n  type: LOAD,\n  trees\n});\n\n\nconst getOne = listing => ({\n    type: FIND_ONE,\n    listing\n  });\n\n\n  export const getlistings = () => async dispatch => {\n    const res = await csrfFetch('/api/listings');\n\n    if (res.ok) {\n      const listings = await res.json();\n      dispatch(load(listings));\n    }\n  }\n\n\n  export const findlistings = (id) => async dispatch => {\n    const res = await csrfFetch(`/api/listings/${id}`);\n\n    if (res.ok) {\n      const listing = await res.json();\n      dispatch(getOne(listing));\n    }\n  };\n\n\n\n\n  const listingsReducer = (state = {}, action) => {\n    switch(action.type) {\n      case LOAD:\n        {\n        const alllistings = {};\n        action.listings.forEach(listing => {\n          alllistings[listing.id] = listing;\n        });\n\n        return {\n          ...alllistings,\n        }\n      }\n      case FIND_ONE:\n       return {...action.listing}\n\n      default:\n        return state;\n    };\n\n  }\n\n  export default listingsReducer;\n"]},"metadata":{},"sourceType":"module"}